<?php

use Illuminate\Http\Response;
use Illuminate\Support\Facades\Cache;

class AuthLogoutTest extends TestCase
{
	protected $token;

	public function setUp(): void
	{
		parent::setUp(); // TODO: Change the autogenerated stub

		$this->token = "9188040d-6c67-4c5b-b112-36a304b66dad";
	}

	public function testLogoutIsUnsuccessfulIfAuthorizationHeaderIsNull()
	{
		$this->post('/logout', [], [])->assertResponseStatus(Response::HTTP_UNAUTHORIZED);
	}

	public function testLogoutIsUnsuccessfulIfAuthorizationHeaderIsEmpty()
	{
		$this->post(
			'/logout', [],
			[
				'Authorization' => ''
			]
		)->assertResponseStatus(Response::HTTP_UNAUTHORIZED);
	}

    public function testLogoutIsUnsuccessfulIfJWTTokenIsNotSetInRedisCache()
    {
		$this->post(
			'/logout', [],
			[
				'Authorization' => 'Bearer ' . $this->token
			]
		)->assertResponseStatus(Response::HTTP_UNAUTHORIZED);
    }

	public function testLogoutIsSuccessfulIfJWTTokenIsSetInRedisCache()
	{
		Cache::add($this->token, "", 10); //set at login

		$this->post(
			'/logout', [],
			[
				'Authorization' => 'Bearer ' . $this->token
			]
		)->assertResponseStatus(Response::HTTP_OK);
	}
}
